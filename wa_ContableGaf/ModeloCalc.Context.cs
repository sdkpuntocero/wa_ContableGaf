//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace wa_ContableGaf
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DEV_CalcEntities : DbContext
    {
        public DEV_CalcEntities()
            : base("name=DEV_CalcEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tblDA> tblDA { get; set; }
        public virtual DbSet<tblDE> tblDE { get; set; }
        public virtual DbSet<tblFlujoDeEfectivo> tblFlujoDeEfectivo { get; set; }
        public virtual DbSet<tblMV> tblMV { get; set; }
        public virtual DbSet<tblVector> tblVector { get; set; }
        public virtual DbSet<tbl_TCFix> tbl_TCFix { get; set; }
        public virtual DbSet<tblCartera> tblCartera { get; set; }
        public virtual DbSet<tblDiasFestivos> tblDiasFestivos { get; set; }
        public virtual DbSet<tblDiasProvision> tblDiasProvision { get; set; }
        public virtual DbSet<tblNAV> tblNAV { get; set; }
        public virtual DbSet<TestCarteraPM> TestCarteraPM { get; set; }
    
        [DbFunction("DEV_CalcEntities", "fntblNAV")]
        public virtual IQueryable<fntblNAV_Result> fntblNAV(Nullable<System.DateTime> fechaOperacion, Nullable<int> operadora)
        {
            var fechaOperacionParameter = fechaOperacion.HasValue ?
                new ObjectParameter("FechaOperacion", fechaOperacion) :
                new ObjectParameter("FechaOperacion", typeof(System.DateTime));
    
            var operadoraParameter = operadora.HasValue ?
                new ObjectParameter("Operadora", operadora) :
                new ObjectParameter("Operadora", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntblNAV_Result>("[DEV_CalcEntities].[fntblNAV](@FechaOperacion, @Operadora)", fechaOperacionParameter, operadoraParameter);
        }
    
        [DbFunction("DEV_CalcEntities", "fntblNAVInst")]
        public virtual IQueryable<fntblNAVInst_Result> fntblNAVInst(Nullable<System.DateTime> fechaOperacion, Nullable<int> claveFondo)
        {
            var fechaOperacionParameter = fechaOperacion.HasValue ?
                new ObjectParameter("FechaOperacion", fechaOperacion) :
                new ObjectParameter("FechaOperacion", typeof(System.DateTime));
    
            var claveFondoParameter = claveFondo.HasValue ?
                new ObjectParameter("ClaveFondo", claveFondo) :
                new ObjectParameter("ClaveFondo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fntblNAVInst_Result>("[DEV_CalcEntities].[fntblNAVInst](@FechaOperacion, @ClaveFondo)", fechaOperacionParameter, claveFondoParameter);
        }
    }
}
